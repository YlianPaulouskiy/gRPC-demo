spring:
  application:
    name: Grpc-Client
grpc:
  client:
    customerGrpcService: # кастомное название твоего клиента, ккоторое указывается в @GrpcClient()

      address: localhost:9900 # адресс сервера
      negotiation-type: plaintext # чтобы проходили незащищенные запросы

      immediate-connect-timeout: # время ожидания (timeout) для немедленного подключения к gRPC серверу. Если клиент gRPC не может подключиться к серверу в течение указанного времени, произойдет ошибка подключения. Это полезно для управления поведением клиента в средах, где сервер может быть недоступен или время его отклика может быть неустойчивым.
      keep-alive-timeout: # время, как долго клиент должен ждать ответа "keep-alive" от сервера, прежде чем считать соединение устаревшим и разорвать его.
      keep-alive-time: # интервал времени, после которого gRPC клиент будет отправлять "keep-alive" сообщения для поддержания активного соединения с сервером. Это особенно полезно для предотвращения закрытия соединений с серверами или балансировщиками нагрузки, которые могут разрывать соединения, если они не видят никакой активности.

      security:
        certificate-chain: # путь к сертификату
        private-key: # ключ для дешифрования

  server:
    security:
      certificate-chain: # используется для определения пути к цепочке сертификатов, которая будет использоваться для шифрования соединений с клиентами
      private-key: # используется для расшифровки данных, которые были зашифрованы с помощью соответствующего публичного ключа. Это позволяет серверу получать защищенные сообщения от клиентов, которые могут быть зашифрованы с использованием публичного ключа, предоставленного сервером.
    port: 9090
